Exercise 4
Main Task

1.Make a commit, and make a silly typo in the commit message.
command->git rm file3.txt
-------------------------------------------------------------------------------------------------------------------------------------
2.Use the --amend flag to enable you to fix the commit message.
command->git log -1
       ->git commit --amend
        edit the commit and save
-------------------------------------------------------------------------------------------------------------------------------------
3.Look at the log and notice how the mistake is magically gone.
command->git commit --amend
-------------------------------------------------------------------------------------------------------------------------------------
4.Now make a commit where you make a typo in one of the files. Once again, use --amend to
magic away your problems.
command->at file1.txt
File1 edited from master branch

. redrid
command->git commit -m "msg typo"
edit the file
->git add .
->git commit --amend --no-edit
 -------------------------------------------------------------------------------------------------------------------------------------

5. Create a branch. Make a commit.
6. Now switch back to your master branch. Make a (non-conflicting) commit there also.
7. Now switch back to your branch.
8. Use the rebase command in your branch. Look at the DAG in gitk, and note that you have
the commit from the master branch, but no merge commit.
9. Make one more commit in your branch.
10. Return to master. Merge your branch. Notice how, thanks to the rebase, this is a fast-
forward merge.
Stretch Task
1. Find somebody from your team from the previous exercise. Have them push a commit to
the central repository.
2. Make a commit locally yourself also. Note that you should not have pulled their commit at
this point.
3. Try to push, and watch it fail.
4. Now, pull but using the --rebase flag.
5. Use git log and gitk to verify that there is no merge commit, and the DAG is linear.
6. Notice that your commit is the latest one, even though temporally the other member of
your team made their commit afterwards. Why is this?
